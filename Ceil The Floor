int find_floor(vector<int> &arr , int n , int target){
	int low = 0 , high = n-1; 
	int ans = -1 ; 
	while(low <= high){
		int mid = (low + high)/2 ; 
		if(arr[mid] <= target){
			ans = arr[mid] ; 
			low = mid + 1 ; 
		}
		else{
			high = mid - 1 ; 
		}
	}
	return ans ; 
}

int find_ceil(vector<int> &arr , int n , int target){
	int low = 0 , high = n-1 ; 
	int ans = -1 ; 
	while(low <= high){
		int mid = (low + high)/2 ; 
		if(arr[mid] >= target){
			ans = arr[mid] ; 
			high = mid - 1 ; 
			 
		}
		else{
			low = mid + 1 ;
		}
	}
	return ans ; 
}

pair<int, int> getFloorAndCeil(vector<int> &arr, int n, int target) {
	int floor = find_floor(arr, n, target);
	int ceil = find_ceil(arr, n, target); 
	return make_pair(floor , ceil ) ;
}
